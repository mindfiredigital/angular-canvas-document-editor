import { Component } from '@angular/core';
import { FormControl } from '@angular/forms';
import { MatSliderModule } from '@angular/material/slider';
import * as i0 from "@angular/core";
export class CustomSliderVerticalComponent {
    constructor() {
        this.value = new FormControl(0);
        this.verticalMarks = new Array(12)
            .fill(0)
            .map((ob, i) => ({ value: -i * 96, label: i }));
    }
    onInputChange(event) {
        this.value.setValue(event.value);
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: CustomSliderVerticalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    /** @nocollapse */ static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: CustomSliderVerticalComponent, isStandalone: true, selector: "lib-custom-slider-vertical", ngImport: i0, template: "<!-- <mat-slider [min]=\"-1152\" [max]=\"0\" [step]=\"96\" [vertical]=\"true\" [invert]=\"true\"\r\n            [thumbLabel]=\"true\" [value]=\"value.value\" [tickInterval]=\"96\"\r\n            (input)=\"onInputChange($event)\">\r\n</mat-slider> -->\r\n", styles: [""], dependencies: [{ kind: "ngmodule", type: MatSliderModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: CustomSliderVerticalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-custom-slider-vertical', standalone: true, imports: [MatSliderModule], template: "<!-- <mat-slider [min]=\"-1152\" [max]=\"0\" [step]=\"96\" [vertical]=\"true\" [invert]=\"true\"\r\n            [thumbLabel]=\"true\" [value]=\"value.value\" [tickInterval]=\"96\"\r\n            (input)=\"onInputChange($event)\">\r\n</mat-slider> -->\r\n" }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXNsaWRlci12ZXJ0aWNhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9teS1jYW52YXMtbGliL3NyYy9saWIvY29tcG9uZW50cy9tYXJnaW4tcnVsZXIvY3VzdG9tLXNsaWRlci12ZXJ0aWNhbC9jdXN0b20tc2xpZGVyLXZlcnRpY2FsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL215LWNhbnZhcy1saWIvc3JjL2xpYi9jb21wb25lbnRzL21hcmdpbi1ydWxlci9jdXN0b20tc2xpZGVyLXZlcnRpY2FsL2N1c3RvbS1zbGlkZXItdmVydGljYWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDOztBQVMzRCxNQUFNLE9BQU8sNkJBQTZCO0lBTXhDO1FBTEEsVUFBSyxHQUFHLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNCLGtCQUFhLEdBQUcsSUFBSSxLQUFLLENBQUMsRUFBRSxDQUFDO2FBQzFCLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDUCxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRW5DLENBQUM7SUFFaEIsYUFBYSxDQUFDLEtBQVU7UUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7a0lBVlUsNkJBQTZCO3NIQUE3Qiw2QkFBNkIsc0ZDWDFDLGdRQUlBLHlEREdZLGVBQWU7OzRGQUlkLDZCQUE2QjtrQkFQekMsU0FBUzsrQkFDRSw0QkFBNEIsY0FDMUIsSUFBSSxXQUNQLENBQUMsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBNYXRTbGlkZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbGlkZXInO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItY3VzdG9tLXNsaWRlci12ZXJ0aWNhbCcsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbTWF0U2xpZGVyTW9kdWxlXSxcclxuICB0ZW1wbGF0ZVVybDogJy4vY3VzdG9tLXNsaWRlci12ZXJ0aWNhbC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmw6ICcuL2N1c3RvbS1zbGlkZXItdmVydGljYWwuY29tcG9uZW50LmNzcycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDdXN0b21TbGlkZXJWZXJ0aWNhbENvbXBvbmVudCB7XHJcbiAgdmFsdWUgPSBuZXcgRm9ybUNvbnRyb2woMCk7XHJcbiAgdmVydGljYWxNYXJrcyA9IG5ldyBBcnJheSgxMilcclxuICAgIC5maWxsKDApXHJcbiAgICAubWFwKChvYiwgaSkgPT4gKHsgdmFsdWU6IC1pICogOTYsIGxhYmVsOiBpIH0pKTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICBvbklucHV0Q2hhbmdlKGV2ZW50OiBhbnkpIHtcclxuICAgIHRoaXMudmFsdWUuc2V0VmFsdWUoZXZlbnQudmFsdWUpO1xyXG4gIH1cclxufVxyXG4iLCI8IS0tIDxtYXQtc2xpZGVyIFttaW5dPVwiLTExNTJcIiBbbWF4XT1cIjBcIiBbc3RlcF09XCI5NlwiIFt2ZXJ0aWNhbF09XCJ0cnVlXCIgW2ludmVydF09XCJ0cnVlXCJcclxuICAgICAgICAgICAgW3RodW1iTGFiZWxdPVwidHJ1ZVwiIFt2YWx1ZV09XCJ2YWx1ZS52YWx1ZVwiIFt0aWNrSW50ZXJ2YWxdPVwiOTZcIlxyXG4gICAgICAgICAgICAoaW5wdXQpPVwib25JbnB1dENoYW5nZSgkZXZlbnQpXCI+XHJcbjwvbWF0LXNsaWRlcj4gLS0+XHJcbiJdfQ==