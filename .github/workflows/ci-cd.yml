name: CI/CD Workflow for Angular Library

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: "@mindfiredigital/angular-canvas-editor Build"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: "Install dependencies"
        run: npm install --legacy-peer-deps

      - name: "Install canvas editor"
        run: npm install @mindfiredigital/canvas-editor@1.0.5 --legacy-peer-deps

      - name: "Build application"
        run: npm run build

      - name: "Verify Build Output"
        run: |
          ls -la dist/my-canvas-lib
          cat dist/my-canvas-lib/package.json

      - name: "Restore changes in package-lock.json"
        run: git restore package-lock.json

      - name: "Set Git user name and email"
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"

  create-release:
    name: "Create GitHub Release and Publish to npm"
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      packages: write
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up Node.js with npm Authentication"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Install dependencies"
        run: npm ci --legacy-peer-deps

      - name: "Install canvas editor"
        run: npm install @mindfiredigital/canvas-editor@1.0.5 --legacy-peer-deps

      - name: "Prepare for release"
        run: npx ng-packagr -p projects/my-canvas-lib/ng-package.json

      - name: "Verify Build Output"
        run: |
          ls -la dist/my-canvas-lib
          cat dist/my-canvas-lib/package.json

      - name: "Semantic Release"
        working-directory: ./dist/my-canvas-lib
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Verify npm Package Contents"
        run: |
          cd dist/my-canvas-lib
          echo "Files included in npm package:"
          npm pack --dry-run
